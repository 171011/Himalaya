apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.himalaya"
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {//添加依赖
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    defaultConfig {
        multiDexEnabled true
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation files('libs\\TingPhoneOpenSDK_7.4.1.jar')
    implementation files('libs\\XmDownload_2.0.jar')
    implementation files('libs\\XmlyOAuth2SDK_V2.0.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.support:multidex:1.0.1'
    //    如果你的jar包/依赖代码 在编译的时候需要依赖，在运行的时候也需要，那么就用compile
    //    如果你的jar包/依赖代码 仅在编译的时候需要，但是在运行时不需要依赖,就用provided
    if(findProject(":Downloader")) {
        api files('libs/xutil3.3.6.jar')
        api project(':Downloader')
        api project(':OAuth2_Android_SDK:XmPayOrderSDK')
        api project(':TingPhoneOpenSDK')
        api project(':OpenSDKAdModel')
    } else{
        api fileTree(dir: 'libs', include: '*.jar')
    }

    api 'com.google.code.gson:gson:2.8.1'
    api 'com.squareup.okhttp3:okhttp:3.11.0'
    api 'com.squareup.okio:okio:1.15.0'
    //api 'com.android.support:support-v4:28.0.0'
}